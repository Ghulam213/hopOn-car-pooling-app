# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: cirrusci/flutter:latest

pipelines:
  default:
    - parallel:
      - step:
          name: 'Build and Test'
          script:
            - echo "Your build and test goes here..."
            - cd frontend
      - step:
          name: 'Lint'
          script:
            - echo "Your linting goes here..."
            - cd frontend
      - step:
          name: 'Security scan'
          script:
            - echo "Your security scan goes here..."
            - cd frontend

    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    - step:
        name: 'Deployment to Staging'
        deployment: staging
        script:
          - echo "Your deployment to staging script goes here..."
          - cd frontend
    - step:
        name: 'Deployment to Production'
        deployment: production
        trigger: 'manual'
        script:
          - echo "Your deployment to production script goes here..."
          - cd frontend
          
  pull-requests:
     '***':
      - step:
          max-time: 120
          size: "2x"
          script:
            - cd frontend
            - flutter pub get
            - flutter analyze
            - flutter build apk
          trigger: automatic
          artifacts:
            - "build/app/outputs/apk/release/*" 
